<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace配置为数据访问层的接口的 包名.接口名称  -->
<mapper namespace="com.xm.dao.UserMapper">
    <!--登录时查询，所以使用select标签  id的值为UsersMapper中方法的名称userLogin
        返回的类型为Users为实体类com.oracle.entity.Users
        参数的类型为Users为实体类com.oracle.entity.Users
        Users userLogin(Users user);
     -->
    <!-- <select id="userLogin" resultType="com.oracle.entity.Users" parameterType="com.oracle.entity.Users">
        SELECT * FROM users WHERE uname = #{uname} AND upass = #{upass}
    </select> -->
    <!--登录时查询，所以使用select标签  id的值为UsersMapper中方法的名称userLogin
        返回的类型为HashMap为实体类java.util.HashMap
        参数的类型为Users为实体类com.oracle.entity.Users
        Users userLogin(Users user);
     -->
    <select id="getUser" resultType="java.util.HashMap" parameterType="com.xm.entity.User">
		SELECT u.*,r.rolename
		FROM users u
		INNER JOIN role r
		ON u.roleid = r.id
		WHERE u.uname = #{uname} AND u.upass = #{upass}
	</select>

	<select id="getAllUsersByPage" resultType="java.util.HashMap">
		<bind name="offset" value="page*pagesize-pagesize"/>
		SELECT users.*, role.rolename AS rolename
		FROM users, role
		WHERE users.roleid = role.id
		<if test=" name != null and name != '' ">
			<bind name="name" value=" '%' + name + '%' "/>
			AND users.realname like #{name}
		</if>
		<if test=" typeId != null and typeId != -1 ">
			AND users.roleid = #{typeId}
		</if>
		LIMIT #{offset},#{pagesize}
	</select>

	<select id="getRowcount" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM users u,role ur
		WHERE u.roleid = ur.id
		<if test=" name != null and name != '' ">
			<bind name="name" value=" '%' + name + '%' "/>
			AND u.uname like #{name}
		</if>
		<if test=" typeId != null and typeId != -1 ">
			AND u.roleid = #{typeId}
		</if>
	</select>


	<delete id="delUser">
		DELETE FROM users WHERE uid = #{id}
	</delete>

	<delete id="batchDelUser" parameterType="java.lang.Integer">
		DELETE FROM users WHERE uid in
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>

	<select id="getUserById" resultType="User">
		SELECT * FROM users WHERE uid =#{id}
	</select>

	<update id="updateUser" parameterType="User">
		UPDATE users SET uname = #{uname}, udepartment = #{udepartment}, realname = #{realname},
		                 roleid = #{roleid}, uimage = #{uimage}
		WHERE uid = #{uid}
	</update>

	<insert id="addUser" parameterType="User">
		INSERT INTO users (uname, upass, udepartment, realname, roleid, uimage)
			VALUE (#{uname}, #{upass}, #{udepartment}, #{realname}, #{roleid}, #{uimage})
	</insert>
</mapper>