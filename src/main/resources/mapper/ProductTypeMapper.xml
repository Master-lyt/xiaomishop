<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xm.dao.ProductTypeMapper">

    <resultMap id="result_ProductType_Map" type="com.xm.entity.ProductType">
        <id column="id" property="typeId" />
        <result column="name" property="typeName" />
    </resultMap>

    <sql id="producttype_Column">
        producttype.id as id
        ,producttype.name as name
    </sql>

    <select id="getProductTypeRowCount" resultType="java.lang.Integer">
        select count(1) from producttype
        WHERE 1 = 1
        <if test="typeName != null and typeName != ''">
            <bind name="name" value="'%' + typeName + '%'"/>
            And name LIKE #{name}
        </if>
    </select>

    <select id="selectProductType" resultMap="result_ProductType_Map">
        select
        <include refid="producttype_Column" />
        from producttype
    </select>

    <select id="selectProductTypeById" parameterType="java.lang.Integer" resultMap="result_ProductType_Map">
        select
        <include refid="producttype_Column" />
        from producttype
        where producttype.id = #{id}
    </select>

    <select id="selectProductTypeByPage" resultMap="result_ProductType_Map">
        select
        <include refid="producttype_Column" />
        from producttype
        WHERE 1 = 1
        <if test="productType.typeName != null and productType.typeName != ''">
            <bind name="name" value="'%' + productType.typeName + '%'"/>
            And name LIKE #{name}
        </if>
        <if test="productType.typeId != null and productType.typeId != -1">
            AND id = #{productType.typeId}
        </if>
        LIMIT #{query.offset},#{query.ps}
    </select>


    <insert id="insertProductType" parameterType="com.xm.entity.ProductType">
        insert into producttype(name) values(#{value.typeName})
    </insert>

    <insert id="insertNonEmptyProductType" parameterType="com.xm.entity.ProductType">
        insert into producttype
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null">name,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{value.typeId},</if>
            <if test="name != null"> #{value.typeName},</if>
        </trim>
    </insert>

    <delete id="deleteProductTypeById" parameterType="java.lang.Integer">
        delete from producttype
        where id = #{id}
    </delete>

    <update id="updateProductTypeById" parameterType="com.xm.entity.ProductType">
        update producttype set
            name=#{enti.typeName}
        where id=#{enti.typeId}
    </update>

    <update id="updateNonEmptyProductTypeById" parameterType="com.xm.entity.ProductType">
        update producttype
        <set>
            <if test="name != null">
                name=#{enti.typeName},
            </if>
        </set>
        where id=#{enti.typeId}
    </update>

</mapper>