<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace配置为数据访问层的接口的 包名.接口名称  -->
<mapper namespace="com.xm.dao.ProductMapper">

    <select id="getALLProducts" resultType="java.util.HashMap">
		SELECT p.*,pt.name AS typename
		FROM product p
		INNER JOIN producttype pt
		ON p.typeid = pt.id
	</select>
	
	<select id="getProductsByPage" resultType="java.util.HashMap">
		<bind name="offset" value="page*pagesize-pagesize"/>
		SELECT
		p.*,pt.name AS typename
		FROM product p
		LEFT JOIN producttype pt
		ON p.typeid = pt.id
		LIMIT #{offset},#{pagesize}
	</select>

	<select id="getAllProductByPage" resultType="java.util.HashMap">
		<bind name="offset" value="page*pagesize-pagesize"/>
		SELECT p.*,pt.name AS typename
		FROM product p,producttype pt
		WHERE p.typeid = pt.id
		<if test=" name != null and name != '' ">
			<bind name="name" value=" '%' + name + '%' "/>
			AND p.name like #{name}
		</if>
		<if test=" typeId != null and typeId != -1 ">
			AND p.typeid = #{typeId}
		</if>
		LIMIT #{offset},#{pagesize}
	</select>

	<select id="getRowcount" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM product p,producttype pt
		WHERE p.typeid = pt.id
		<if test=" name != null and name != '' ">
			<bind name="name" value=" '%' + name + '%' "/>
			AND p.name like #{name}
		</if>
		<if test=" typeId != null and typeId != -1 ">
			AND p.typeid = #{typeId}
		</if>
	</select>

	<delete id="delProductById">
		DELETE FROM product WHERE id = #{id}
	</delete>


	<delete id="delBatchProduct" parameterType="java.lang.Integer">
		DELETE FROM product WHERE id in
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>

	</delete>

    <select id="getAll" resultType="ProductType">
        SELECT * FROM producttype
    </select>

    <insert id="addProduct" parameterType="Product">
        INSERT INTO product (name, content, price, image, number, typeid, date)
            VALUE (#{name}, #{content}, #{price}, #{image}, #{number}, #{typeid}, #{date})

            <!--更简便的办法 insert into product value(null(-1),#{name},#{content},#{price},#{image},#{number},#{typeid},#{date})-->
    </insert>

	<update id="updateProduct" parameterType="Product">
		UPDATE product
		SET name=#{name},content=#{content},price=#{price},image=#{image},number=#{number},
		    typeid=#{typeid},date=#{date}
		WHERE id=#{id}
	</update>

	<select id="getProductById" resultType="Product" parameterType="java.lang.Integer">
		SELECT * FROM product WHERE id = #{id}
	</select>
</mapper>